/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UseSyncExternalStoreIndexImport } from './routes/use-sync-external-store/index'
import { Route as SubscribePatternIndexImport } from './routes/subscribe-pattern/index'
import { Route as SubscribePatternRxJsIndexImport } from './routes/subscribe-pattern/rx-js/index'
import { Route as SubscribePatternObserverPatternIndexImport } from './routes/subscribe-pattern/observer-pattern/index'
import { Route as SubscribePatternEventEmitterIndexImport } from './routes/subscribe-pattern/event-emitter/index'
import { Route as ProjectsTestimonialCardIndexImport } from './routes/projects/testimonial-card/index'
import { Route as ConceptsDebounceIndexImport } from './routes/concepts/debounce/index'

// Create/Update Routes

const UseSyncExternalStoreIndexRoute = UseSyncExternalStoreIndexImport.update({
  id: '/use-sync-external-store/',
  path: '/use-sync-external-store/',
  getParentRoute: () => rootRoute,
} as any)

const SubscribePatternIndexRoute = SubscribePatternIndexImport.update({
  id: '/subscribe-pattern/',
  path: '/subscribe-pattern/',
  getParentRoute: () => rootRoute,
} as any)

const SubscribePatternRxJsIndexRoute = SubscribePatternRxJsIndexImport.update({
  id: '/subscribe-pattern/rx-js/',
  path: '/subscribe-pattern/rx-js/',
  getParentRoute: () => rootRoute,
} as any)

const SubscribePatternObserverPatternIndexRoute =
  SubscribePatternObserverPatternIndexImport.update({
    id: '/subscribe-pattern/observer-pattern/',
    path: '/subscribe-pattern/observer-pattern/',
    getParentRoute: () => rootRoute,
  } as any)

const SubscribePatternEventEmitterIndexRoute =
  SubscribePatternEventEmitterIndexImport.update({
    id: '/subscribe-pattern/event-emitter/',
    path: '/subscribe-pattern/event-emitter/',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsTestimonialCardIndexRoute =
  ProjectsTestimonialCardIndexImport.update({
    id: '/projects/testimonial-card/',
    path: '/projects/testimonial-card/',
    getParentRoute: () => rootRoute,
  } as any)

const ConceptsDebounceIndexRoute = ConceptsDebounceIndexImport.update({
  id: '/concepts/debounce/',
  path: '/concepts/debounce/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/subscribe-pattern/': {
      id: '/subscribe-pattern/'
      path: '/subscribe-pattern'
      fullPath: '/subscribe-pattern'
      preLoaderRoute: typeof SubscribePatternIndexImport
      parentRoute: typeof rootRoute
    }
    '/use-sync-external-store/': {
      id: '/use-sync-external-store/'
      path: '/use-sync-external-store'
      fullPath: '/use-sync-external-store'
      preLoaderRoute: typeof UseSyncExternalStoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/concepts/debounce/': {
      id: '/concepts/debounce/'
      path: '/concepts/debounce'
      fullPath: '/concepts/debounce'
      preLoaderRoute: typeof ConceptsDebounceIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/testimonial-card/': {
      id: '/projects/testimonial-card/'
      path: '/projects/testimonial-card'
      fullPath: '/projects/testimonial-card'
      preLoaderRoute: typeof ProjectsTestimonialCardIndexImport
      parentRoute: typeof rootRoute
    }
    '/subscribe-pattern/event-emitter/': {
      id: '/subscribe-pattern/event-emitter/'
      path: '/subscribe-pattern/event-emitter'
      fullPath: '/subscribe-pattern/event-emitter'
      preLoaderRoute: typeof SubscribePatternEventEmitterIndexImport
      parentRoute: typeof rootRoute
    }
    '/subscribe-pattern/observer-pattern/': {
      id: '/subscribe-pattern/observer-pattern/'
      path: '/subscribe-pattern/observer-pattern'
      fullPath: '/subscribe-pattern/observer-pattern'
      preLoaderRoute: typeof SubscribePatternObserverPatternIndexImport
      parentRoute: typeof rootRoute
    }
    '/subscribe-pattern/rx-js/': {
      id: '/subscribe-pattern/rx-js/'
      path: '/subscribe-pattern/rx-js'
      fullPath: '/subscribe-pattern/rx-js'
      preLoaderRoute: typeof SubscribePatternRxJsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/subscribe-pattern': typeof SubscribePatternIndexRoute
  '/use-sync-external-store': typeof UseSyncExternalStoreIndexRoute
  '/concepts/debounce': typeof ConceptsDebounceIndexRoute
  '/projects/testimonial-card': typeof ProjectsTestimonialCardIndexRoute
  '/subscribe-pattern/event-emitter': typeof SubscribePatternEventEmitterIndexRoute
  '/subscribe-pattern/observer-pattern': typeof SubscribePatternObserverPatternIndexRoute
  '/subscribe-pattern/rx-js': typeof SubscribePatternRxJsIndexRoute
}

export interface FileRoutesByTo {
  '/subscribe-pattern': typeof SubscribePatternIndexRoute
  '/use-sync-external-store': typeof UseSyncExternalStoreIndexRoute
  '/concepts/debounce': typeof ConceptsDebounceIndexRoute
  '/projects/testimonial-card': typeof ProjectsTestimonialCardIndexRoute
  '/subscribe-pattern/event-emitter': typeof SubscribePatternEventEmitterIndexRoute
  '/subscribe-pattern/observer-pattern': typeof SubscribePatternObserverPatternIndexRoute
  '/subscribe-pattern/rx-js': typeof SubscribePatternRxJsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/subscribe-pattern/': typeof SubscribePatternIndexRoute
  '/use-sync-external-store/': typeof UseSyncExternalStoreIndexRoute
  '/concepts/debounce/': typeof ConceptsDebounceIndexRoute
  '/projects/testimonial-card/': typeof ProjectsTestimonialCardIndexRoute
  '/subscribe-pattern/event-emitter/': typeof SubscribePatternEventEmitterIndexRoute
  '/subscribe-pattern/observer-pattern/': typeof SubscribePatternObserverPatternIndexRoute
  '/subscribe-pattern/rx-js/': typeof SubscribePatternRxJsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/subscribe-pattern'
    | '/use-sync-external-store'
    | '/concepts/debounce'
    | '/projects/testimonial-card'
    | '/subscribe-pattern/event-emitter'
    | '/subscribe-pattern/observer-pattern'
    | '/subscribe-pattern/rx-js'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/subscribe-pattern'
    | '/use-sync-external-store'
    | '/concepts/debounce'
    | '/projects/testimonial-card'
    | '/subscribe-pattern/event-emitter'
    | '/subscribe-pattern/observer-pattern'
    | '/subscribe-pattern/rx-js'
  id:
    | '__root__'
    | '/subscribe-pattern/'
    | '/use-sync-external-store/'
    | '/concepts/debounce/'
    | '/projects/testimonial-card/'
    | '/subscribe-pattern/event-emitter/'
    | '/subscribe-pattern/observer-pattern/'
    | '/subscribe-pattern/rx-js/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  SubscribePatternIndexRoute: typeof SubscribePatternIndexRoute
  UseSyncExternalStoreIndexRoute: typeof UseSyncExternalStoreIndexRoute
  ConceptsDebounceIndexRoute: typeof ConceptsDebounceIndexRoute
  ProjectsTestimonialCardIndexRoute: typeof ProjectsTestimonialCardIndexRoute
  SubscribePatternEventEmitterIndexRoute: typeof SubscribePatternEventEmitterIndexRoute
  SubscribePatternObserverPatternIndexRoute: typeof SubscribePatternObserverPatternIndexRoute
  SubscribePatternRxJsIndexRoute: typeof SubscribePatternRxJsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  SubscribePatternIndexRoute: SubscribePatternIndexRoute,
  UseSyncExternalStoreIndexRoute: UseSyncExternalStoreIndexRoute,
  ConceptsDebounceIndexRoute: ConceptsDebounceIndexRoute,
  ProjectsTestimonialCardIndexRoute: ProjectsTestimonialCardIndexRoute,
  SubscribePatternEventEmitterIndexRoute:
    SubscribePatternEventEmitterIndexRoute,
  SubscribePatternObserverPatternIndexRoute:
    SubscribePatternObserverPatternIndexRoute,
  SubscribePatternRxJsIndexRoute: SubscribePatternRxJsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/subscribe-pattern/",
        "/use-sync-external-store/",
        "/concepts/debounce/",
        "/projects/testimonial-card/",
        "/subscribe-pattern/event-emitter/",
        "/subscribe-pattern/observer-pattern/",
        "/subscribe-pattern/rx-js/"
      ]
    },
    "/subscribe-pattern/": {
      "filePath": "subscribe-pattern/index.tsx"
    },
    "/use-sync-external-store/": {
      "filePath": "use-sync-external-store/index.tsx"
    },
    "/concepts/debounce/": {
      "filePath": "concepts/debounce/index.tsx"
    },
    "/projects/testimonial-card/": {
      "filePath": "projects/testimonial-card/index.tsx"
    },
    "/subscribe-pattern/event-emitter/": {
      "filePath": "subscribe-pattern/event-emitter/index.tsx"
    },
    "/subscribe-pattern/observer-pattern/": {
      "filePath": "subscribe-pattern/observer-pattern/index.tsx"
    },
    "/subscribe-pattern/rx-js/": {
      "filePath": "subscribe-pattern/rx-js/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
